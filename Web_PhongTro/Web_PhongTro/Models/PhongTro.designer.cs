#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web_PhongTro.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_PhongTro")]
	public partial class PhongTroDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAnhBaiDang(AnhBaiDang instance);
    partial void UpdateAnhBaiDang(AnhBaiDang instance);
    partial void DeleteAnhBaiDang(AnhBaiDang instance);
    partial void InsertBaiDang(BaiDang instance);
    partial void UpdateBaiDang(BaiDang instance);
    partial void DeleteBaiDang(BaiDang instance);
    partial void InsertDanhMuc(DanhMuc instance);
    partial void UpdateDanhMuc(DanhMuc instance);
    partial void DeleteDanhMuc(DanhMuc instance);
    partial void InsertDiaChi(DiaChi instance);
    partial void UpdateDiaChi(DiaChi instance);
    partial void DeleteDiaChi(DiaChi instance);
    partial void InsertKiemDuyetVien(KiemDuyetVien instance);
    partial void UpdateKiemDuyetVien(KiemDuyetVien instance);
    partial void DeleteKiemDuyetVien(KiemDuyetVien instance);
    partial void InsertNguoiChoThue(NguoiChoThue instance);
    partial void UpdateNguoiChoThue(NguoiChoThue instance);
    partial void DeleteNguoiChoThue(NguoiChoThue instance);
    partial void InsertNguoiDung(NguoiDung instance);
    partial void UpdateNguoiDung(NguoiDung instance);
    partial void DeleteNguoiDung(NguoiDung instance);
    partial void InsertNguoiThue(NguoiThue instance);
    partial void UpdateNguoiThue(NguoiThue instance);
    partial void DeleteNguoiThue(NguoiThue instance);
    partial void InsertPhanHoi(PhanHoi instance);
    partial void UpdatePhanHoi(PhanHoi instance);
    partial void DeletePhanHoi(PhanHoi instance);
    partial void InsertPhongTro(PhongTro instance);
    partial void UpdatePhongTro(PhongTro instance);
    partial void DeletePhongTro(PhongTro instance);
    partial void InsertVaiTro(VaiTro instance);
    partial void UpdateVaiTro(VaiTro instance);
    partial void DeleteVaiTro(VaiTro instance);
    partial void InsertYeuThich(YeuThich instance);
    partial void UpdateYeuThich(YeuThich instance);
    partial void DeleteYeuThich(YeuThich instance);
        #endregion

        public PhongTroDataContext() :
        base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DB_PhongTroConnectionString"].ConnectionString, mappingSource)
        {
            OnCreated();
        }
        public PhongTroDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PhongTroDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PhongTroDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PhongTroDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AnhBaiDang> AnhBaiDangs
		{
			get
			{
				return this.GetTable<AnhBaiDang>();
			}
		}
		
		public System.Data.Linq.Table<BaiDang> BaiDangs
		{
			get
			{
				return this.GetTable<BaiDang>();
			}
		}
		
		public System.Data.Linq.Table<DanhMuc> DanhMucs
		{
			get
			{
				return this.GetTable<DanhMuc>();
			}
		}
		
		public System.Data.Linq.Table<DiaChi> DiaChis
		{
			get
			{
				return this.GetTable<DiaChi>();
			}
		}
		
		public System.Data.Linq.Table<KiemDuyetVien> KiemDuyetViens
		{
			get
			{
				return this.GetTable<KiemDuyetVien>();
			}
		}
		
		public System.Data.Linq.Table<NguoiChoThue> NguoiChoThues
		{
			get
			{
				return this.GetTable<NguoiChoThue>();
			}
		}
		
		public System.Data.Linq.Table<NguoiDung> NguoiDungs
		{
			get
			{
				return this.GetTable<NguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<NguoiThue> NguoiThues
		{
			get
			{
				return this.GetTable<NguoiThue>();
			}
		}
		
		public System.Data.Linq.Table<PhanHoi> PhanHois
		{
			get
			{
				return this.GetTable<PhanHoi>();
			}
		}
		
		public System.Data.Linq.Table<PhongTro> PhongTros
		{
			get
			{
				return this.GetTable<PhongTro>();
			}
		}
		
		public System.Data.Linq.Table<VaiTro> VaiTros
		{
			get
			{
				return this.GetTable<VaiTro>();
			}
		}
		
		public System.Data.Linq.Table<YeuThich> YeuThiches
		{
			get
			{
				return this.GetTable<YeuThich>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnhBaiDang")]
	public partial class AnhBaiDang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdAnh;
		
		private long _IdBaiDang;
		
		private string _DuongDanAnh;
		
		private EntityRef<BaiDang> _BaiDang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdAnhChanging(long value);
    partial void OnIdAnhChanged();
    partial void OnIdBaiDangChanging(long value);
    partial void OnIdBaiDangChanged();
    partial void OnDuongDanAnhChanging(string value);
    partial void OnDuongDanAnhChanged();
    #endregion
		
		public AnhBaiDang()
		{
			this._BaiDang = default(EntityRef<BaiDang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAnh", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdAnh
		{
			get
			{
				return this._IdAnh;
			}
			set
			{
				if ((this._IdAnh != value))
				{
					this.OnIdAnhChanging(value);
					this.SendPropertyChanging();
					this._IdAnh = value;
					this.SendPropertyChanged("IdAnh");
					this.OnIdAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBaiDang", DbType="BigInt NOT NULL")]
		public long IdBaiDang
		{
			get
			{
				return this._IdBaiDang;
			}
			set
			{
				if ((this._IdBaiDang != value))
				{
					if (this._BaiDang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBaiDangChanging(value);
					this.SendPropertyChanging();
					this._IdBaiDang = value;
					this.SendPropertyChanged("IdBaiDang");
					this.OnIdBaiDangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DuongDanAnh", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string DuongDanAnh
		{
			get
			{
				return this._DuongDanAnh;
			}
			set
			{
				if ((this._DuongDanAnh != value))
				{
					this.OnDuongDanAnhChanging(value);
					this.SendPropertyChanging();
					this._DuongDanAnh = value;
					this.SendPropertyChanged("DuongDanAnh");
					this.OnDuongDanAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaiDang_AnhBaiDang", Storage="_BaiDang", ThisKey="IdBaiDang", OtherKey="IdBaiDang", IsForeignKey=true)]
		public BaiDang BaiDang
		{
			get
			{
				return this._BaiDang.Entity;
			}
			set
			{
				BaiDang previousValue = this._BaiDang.Entity;
				if (((previousValue != value) 
							|| (this._BaiDang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BaiDang.Entity = null;
						previousValue.AnhBaiDangs.Remove(this);
					}
					this._BaiDang.Entity = value;
					if ((value != null))
					{
						value.AnhBaiDangs.Add(this);
						this._IdBaiDang = value.IdBaiDang;
					}
					else
					{
						this._IdBaiDang = default(long);
					}
					this.SendPropertyChanged("BaiDang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaiDang")]
	public partial class BaiDang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdBaiDang;
		
		private long _IdNguoiChoThue;
		
		private long _IdPhongTro;
		
		private string _TieuDe;
		
		private string _NoiDung;
		
		private string _AnhBaiDang;
		
		private System.DateTime _NgayDang;
		
		private string _TrangThai;
		
		private System.Nullable<int> _SoLuongYeuThich;
		
		private EntitySet<AnhBaiDang> _AnhBaiDangs;
		
		private EntitySet<PhanHoi> _PhanHois;
		
		private EntitySet<YeuThich> _YeuThiches;
		
		private EntityRef<NguoiChoThue> _NguoiChoThue;
		
		private EntityRef<PhongTro> _PhongTro;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdBaiDangChanging(long value);
    partial void OnIdBaiDangChanged();
    partial void OnIdNguoiChoThueChanging(long value);
    partial void OnIdNguoiChoThueChanged();
    partial void OnIdPhongTroChanging(long value);
    partial void OnIdPhongTroChanged();
    partial void OnTieuDeChanging(string value);
    partial void OnTieuDeChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnAnhBaiDangChanging(string value);
    partial void OnAnhBaiDangChanged();
    partial void OnNgayDangChanging(System.DateTime value);
    partial void OnNgayDangChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnSoLuongYeuThichChanging(System.Nullable<int> value);
    partial void OnSoLuongYeuThichChanged();
    #endregion
		
		public BaiDang()
		{
			this._AnhBaiDangs = new EntitySet<AnhBaiDang>(new Action<AnhBaiDang>(this.attach_AnhBaiDangs), new Action<AnhBaiDang>(this.detach_AnhBaiDangs));
			this._PhanHois = new EntitySet<PhanHoi>(new Action<PhanHoi>(this.attach_PhanHois), new Action<PhanHoi>(this.detach_PhanHois));
			this._YeuThiches = new EntitySet<YeuThich>(new Action<YeuThich>(this.attach_YeuThiches), new Action<YeuThich>(this.detach_YeuThiches));
			this._NguoiChoThue = default(EntityRef<NguoiChoThue>);
			this._PhongTro = default(EntityRef<PhongTro>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBaiDang", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdBaiDang
		{
			get
			{
				return this._IdBaiDang;
			}
			set
			{
				if ((this._IdBaiDang != value))
				{
					this.OnIdBaiDangChanging(value);
					this.SendPropertyChanging();
					this._IdBaiDang = value;
					this.SendPropertyChanged("IdBaiDang");
					this.OnIdBaiDangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNguoiChoThue", DbType="BigInt NOT NULL")]
		public long IdNguoiChoThue
		{
			get
			{
				return this._IdNguoiChoThue;
			}
			set
			{
				if ((this._IdNguoiChoThue != value))
				{
					if (this._NguoiChoThue.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNguoiChoThueChanging(value);
					this.SendPropertyChanging();
					this._IdNguoiChoThue = value;
					this.SendPropertyChanged("IdNguoiChoThue");
					this.OnIdNguoiChoThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPhongTro", DbType="BigInt NOT NULL")]
		public long IdPhongTro
		{
			get
			{
				return this._IdPhongTro;
			}
			set
			{
				if ((this._IdPhongTro != value))
				{
					if (this._PhongTro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPhongTroChanging(value);
					this.SendPropertyChanging();
					this._IdPhongTro = value;
					this.SendPropertyChanged("IdPhongTro");
					this.OnIdPhongTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieuDe", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TieuDe
		{
			get
			{
				return this._TieuDe;
			}
			set
			{
				if ((this._TieuDe != value))
				{
					this.OnTieuDeChanging(value);
					this.SendPropertyChanging();
					this._TieuDe = value;
					this.SendPropertyChanged("TieuDe");
					this.OnTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhBaiDang", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string AnhBaiDang
		{
			get
			{
				return this._AnhBaiDang;
			}
			set
			{
				if ((this._AnhBaiDang != value))
				{
					this.OnAnhBaiDangChanging(value);
					this.SendPropertyChanging();
					this._AnhBaiDang = value;
					this.SendPropertyChanged("AnhBaiDang");
					this.OnAnhBaiDangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDang", DbType="Date NOT NULL")]
		public System.DateTime NgayDang
		{
			get
			{
				return this._NgayDang;
			}
			set
			{
				if ((this._NgayDang != value))
				{
					this.OnNgayDangChanging(value);
					this.SendPropertyChanging();
					this._NgayDang = value;
					this.SendPropertyChanged("NgayDang");
					this.OnNgayDangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongYeuThich", DbType="Int")]
		public System.Nullable<int> SoLuongYeuThich
		{
			get
			{
				return this._SoLuongYeuThich;
			}
			set
			{
				if ((this._SoLuongYeuThich != value))
				{
					this.OnSoLuongYeuThichChanging(value);
					this.SendPropertyChanging();
					this._SoLuongYeuThich = value;
					this.SendPropertyChanged("SoLuongYeuThich");
					this.OnSoLuongYeuThichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaiDang_AnhBaiDang", Storage="_AnhBaiDangs", ThisKey="IdBaiDang", OtherKey="IdBaiDang")]
		public EntitySet<AnhBaiDang> AnhBaiDangs
		{
			get
			{
				return this._AnhBaiDangs;
			}
			set
			{
				this._AnhBaiDangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaiDang_PhanHoi", Storage="_PhanHois", ThisKey="IdBaiDang", OtherKey="IdBaiDang")]
		public EntitySet<PhanHoi> PhanHois
		{
			get
			{
				return this._PhanHois;
			}
			set
			{
				this._PhanHois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaiDang_YeuThich", Storage="_YeuThiches", ThisKey="IdBaiDang", OtherKey="IdBaiDang")]
		public EntitySet<YeuThich> YeuThiches
		{
			get
			{
				return this._YeuThiches;
			}
			set
			{
				this._YeuThiches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiChoThue_BaiDang", Storage="_NguoiChoThue", ThisKey="IdNguoiChoThue", OtherKey="IdNguoiChoThue", IsForeignKey=true)]
		public NguoiChoThue NguoiChoThue
		{
			get
			{
				return this._NguoiChoThue.Entity;
			}
			set
			{
				NguoiChoThue previousValue = this._NguoiChoThue.Entity;
				if (((previousValue != value) 
							|| (this._NguoiChoThue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiChoThue.Entity = null;
						previousValue.BaiDangs.Remove(this);
					}
					this._NguoiChoThue.Entity = value;
					if ((value != null))
					{
						value.BaiDangs.Add(this);
						this._IdNguoiChoThue = value.IdNguoiChoThue;
					}
					else
					{
						this._IdNguoiChoThue = default(long);
					}
					this.SendPropertyChanged("NguoiChoThue");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongTro_BaiDang", Storage="_PhongTro", ThisKey="IdPhongTro", OtherKey="IdPhongTro", IsForeignKey=true)]
		public PhongTro PhongTro
		{
			get
			{
				return this._PhongTro.Entity;
			}
			set
			{
				PhongTro previousValue = this._PhongTro.Entity;
				if (((previousValue != value) 
							|| (this._PhongTro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongTro.Entity = null;
						previousValue.BaiDangs.Remove(this);
					}
					this._PhongTro.Entity = value;
					if ((value != null))
					{
						value.BaiDangs.Add(this);
						this._IdPhongTro = value.IdPhongTro;
					}
					else
					{
						this._IdPhongTro = default(long);
					}
					this.SendPropertyChanged("PhongTro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AnhBaiDangs(AnhBaiDang entity)
		{
			this.SendPropertyChanging();
			entity.BaiDang = this;
		}
		
		private void detach_AnhBaiDangs(AnhBaiDang entity)
		{
			this.SendPropertyChanging();
			entity.BaiDang = null;
		}
		
		private void attach_PhanHois(PhanHoi entity)
		{
			this.SendPropertyChanging();
			entity.BaiDang = this;
		}
		
		private void detach_PhanHois(PhanHoi entity)
		{
			this.SendPropertyChanging();
			entity.BaiDang = null;
		}
		
		private void attach_YeuThiches(YeuThich entity)
		{
			this.SendPropertyChanging();
			entity.BaiDang = this;
		}
		
		private void detach_YeuThiches(YeuThich entity)
		{
			this.SendPropertyChanging();
			entity.BaiDang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMuc")]
	public partial class DanhMuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDanhMuc;
		
		private string _TenDanhMuc;
		
		private EntitySet<PhongTro> _PhongTros;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDanhMucChanging(int value);
    partial void OnIdDanhMucChanged();
    partial void OnTenDanhMucChanging(string value);
    partial void OnTenDanhMucChanged();
    #endregion
		
		public DanhMuc()
		{
			this._PhongTros = new EntitySet<PhongTro>(new Action<PhongTro>(this.attach_PhongTros), new Action<PhongTro>(this.detach_PhongTros));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDanhMuc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDanhMuc
		{
			get
			{
				return this._IdDanhMuc;
			}
			set
			{
				if ((this._IdDanhMuc != value))
				{
					this.OnIdDanhMucChanging(value);
					this.SendPropertyChanging();
					this._IdDanhMuc = value;
					this.SendPropertyChanged("IdDanhMuc");
					this.OnIdDanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDanhMuc", DbType="NVarChar(255)")]
		public string TenDanhMuc
		{
			get
			{
				return this._TenDanhMuc;
			}
			set
			{
				if ((this._TenDanhMuc != value))
				{
					this.OnTenDanhMucChanging(value);
					this.SendPropertyChanging();
					this._TenDanhMuc = value;
					this.SendPropertyChanged("TenDanhMuc");
					this.OnTenDanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_PhongTro", Storage="_PhongTros", ThisKey="IdDanhMuc", OtherKey="IdDanhMuc")]
		public EntitySet<PhongTro> PhongTros
		{
			get
			{
				return this._PhongTros;
			}
			set
			{
				this._PhongTros.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhongTros(PhongTro entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc = this;
		}
		
		private void detach_PhongTros(PhongTro entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiaChi")]
	public partial class DiaChi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdDiaChi;
		
		private string _SoNha;
		
		private string _Duong;
		
		private string _Phuong;
		
		private string _Quan;
		
		private string _ThanhPho;
		
		private string _QuocGia;
		
		private string _GhiChu;
		
		private EntitySet<PhongTro> _PhongTros;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDiaChiChanging(long value);
    partial void OnIdDiaChiChanged();
    partial void OnSoNhaChanging(string value);
    partial void OnSoNhaChanged();
    partial void OnDuongChanging(string value);
    partial void OnDuongChanged();
    partial void OnPhuongChanging(string value);
    partial void OnPhuongChanged();
    partial void OnQuanChanging(string value);
    partial void OnQuanChanged();
    partial void OnThanhPhoChanging(string value);
    partial void OnThanhPhoChanged();
    partial void OnQuocGiaChanging(string value);
    partial void OnQuocGiaChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public DiaChi()
		{
			this._PhongTros = new EntitySet<PhongTro>(new Action<PhongTro>(this.attach_PhongTros), new Action<PhongTro>(this.detach_PhongTros));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDiaChi", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdDiaChi
		{
			get
			{
				return this._IdDiaChi;
			}
			set
			{
				if ((this._IdDiaChi != value))
				{
					this.OnIdDiaChiChanging(value);
					this.SendPropertyChanging();
					this._IdDiaChi = value;
					this.SendPropertyChanged("IdDiaChi");
					this.OnIdDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoNha", DbType="NVarChar(255)")]
		public string SoNha
		{
			get
			{
				return this._SoNha;
			}
			set
			{
				if ((this._SoNha != value))
				{
					this.OnSoNhaChanging(value);
					this.SendPropertyChanging();
					this._SoNha = value;
					this.SendPropertyChanged("SoNha");
					this.OnSoNhaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duong", DbType="NVarChar(255)")]
		public string Duong
		{
			get
			{
				return this._Duong;
			}
			set
			{
				if ((this._Duong != value))
				{
					this.OnDuongChanging(value);
					this.SendPropertyChanging();
					this._Duong = value;
					this.SendPropertyChanged("Duong");
					this.OnDuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phuong", DbType="NVarChar(255)")]
		public string Phuong
		{
			get
			{
				return this._Phuong;
			}
			set
			{
				if ((this._Phuong != value))
				{
					this.OnPhuongChanging(value);
					this.SendPropertyChanging();
					this._Phuong = value;
					this.SendPropertyChanged("Phuong");
					this.OnPhuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quan", DbType="NVarChar(255)")]
		public string Quan
		{
			get
			{
				return this._Quan;
			}
			set
			{
				if ((this._Quan != value))
				{
					this.OnQuanChanging(value);
					this.SendPropertyChanging();
					this._Quan = value;
					this.SendPropertyChanged("Quan");
					this.OnQuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhPho", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ThanhPho
		{
			get
			{
				return this._ThanhPho;
			}
			set
			{
				if ((this._ThanhPho != value))
				{
					this.OnThanhPhoChanging(value);
					this.SendPropertyChanging();
					this._ThanhPho = value;
					this.SendPropertyChanged("ThanhPho");
					this.OnThanhPhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuocGia", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string QuocGia
		{
			get
			{
				return this._QuocGia;
			}
			set
			{
				if ((this._QuocGia != value))
				{
					this.OnQuocGiaChanging(value);
					this.SendPropertyChanging();
					this._QuocGia = value;
					this.SendPropertyChanged("QuocGia");
					this.OnQuocGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(255)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiaChi_PhongTro", Storage="_PhongTros", ThisKey="IdDiaChi", OtherKey="IdDiaChi")]
		public EntitySet<PhongTro> PhongTros
		{
			get
			{
				return this._PhongTros;
			}
			set
			{
				this._PhongTros.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhongTros(PhongTro entity)
		{
			this.SendPropertyChanging();
			entity.DiaChi = this;
		}
		
		private void detach_PhongTros(PhongTro entity)
		{
			this.SendPropertyChanging();
			entity.DiaChi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KiemDuyetVien")]
	public partial class KiemDuyetVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdKDV;
		
		private string _TenKDV;
		
		private string _DiaChiKDV;
		
		private long _IdNguoiDung;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdKDVChanging(long value);
    partial void OnIdKDVChanged();
    partial void OnTenKDVChanging(string value);
    partial void OnTenKDVChanged();
    partial void OnDiaChiKDVChanging(string value);
    partial void OnDiaChiKDVChanged();
    partial void OnIdNguoiDungChanging(long value);
    partial void OnIdNguoiDungChanged();
    #endregion
		
		public KiemDuyetVien()
		{
			this._NguoiDung = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKDV", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdKDV
		{
			get
			{
				return this._IdKDV;
			}
			set
			{
				if ((this._IdKDV != value))
				{
					this.OnIdKDVChanging(value);
					this.SendPropertyChanging();
					this._IdKDV = value;
					this.SendPropertyChanged("IdKDV");
					this.OnIdKDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKDV", DbType="NVarChar(255)")]
		public string TenKDV
		{
			get
			{
				return this._TenKDV;
			}
			set
			{
				if ((this._TenKDV != value))
				{
					this.OnTenKDVChanging(value);
					this.SendPropertyChanging();
					this._TenKDV = value;
					this.SendPropertyChanged("TenKDV");
					this.OnTenKDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiKDV", DbType="NVarChar(255)")]
		public string DiaChiKDV
		{
			get
			{
				return this._DiaChiKDV;
			}
			set
			{
				if ((this._DiaChiKDV != value))
				{
					this.OnDiaChiKDVChanging(value);
					this.SendPropertyChanging();
					this._DiaChiKDV = value;
					this.SendPropertyChanged("DiaChiKDV");
					this.OnDiaChiKDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNguoiDung", DbType="BigInt NOT NULL")]
		public long IdNguoiDung
		{
			get
			{
				return this._IdNguoiDung;
			}
			set
			{
				if ((this._IdNguoiDung != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._IdNguoiDung = value;
					this.SendPropertyChanged("IdNguoiDung");
					this.OnIdNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_KiemDuyetVien", Storage="_NguoiDung", ThisKey="IdNguoiDung", OtherKey="IdNguoiDung", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.KiemDuyetViens.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.KiemDuyetViens.Add(this);
						this._IdNguoiDung = value.IdNguoiDung;
					}
					else
					{
						this._IdNguoiDung = default(long);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiChoThue")]
	public partial class NguoiChoThue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdNguoiChoThue;
		
		private long _IdNguoiDung;
		
		private string _TenNguoiChoThue;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _GioiTinh;
		
		private string _DiaChi;
		
		private string _SoDienThoai;
		
		private string _Email;
		
		private EntitySet<BaiDang> _BaiDangs;
		
		private EntitySet<PhongTro> _PhongTros;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNguoiChoThueChanging(long value);
    partial void OnIdNguoiChoThueChanged();
    partial void OnIdNguoiDungChanging(long value);
    partial void OnIdNguoiDungChanged();
    partial void OnTenNguoiChoThueChanging(string value);
    partial void OnTenNguoiChoThueChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public NguoiChoThue()
		{
			this._BaiDangs = new EntitySet<BaiDang>(new Action<BaiDang>(this.attach_BaiDangs), new Action<BaiDang>(this.detach_BaiDangs));
			this._PhongTros = new EntitySet<PhongTro>(new Action<PhongTro>(this.attach_PhongTros), new Action<PhongTro>(this.detach_PhongTros));
			this._NguoiDung = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNguoiChoThue", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdNguoiChoThue
		{
			get
			{
				return this._IdNguoiChoThue;
			}
			set
			{
				if ((this._IdNguoiChoThue != value))
				{
					this.OnIdNguoiChoThueChanging(value);
					this.SendPropertyChanging();
					this._IdNguoiChoThue = value;
					this.SendPropertyChanged("IdNguoiChoThue");
					this.OnIdNguoiChoThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNguoiDung", DbType="BigInt NOT NULL")]
		public long IdNguoiDung
		{
			get
			{
				return this._IdNguoiDung;
			}
			set
			{
				if ((this._IdNguoiDung != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._IdNguoiDung = value;
					this.SendPropertyChanged("IdNguoiDung");
					this.OnIdNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNguoiChoThue", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TenNguoiChoThue
		{
			get
			{
				return this._TenNguoiChoThue;
			}
			set
			{
				if ((this._TenNguoiChoThue != value))
				{
					this.OnTenNguoiChoThueChanging(value);
					this.SendPropertyChanging();
					this._TenNguoiChoThue = value;
					this.SendPropertyChanged("TenNguoiChoThue");
					this.OnTenNguoiChoThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NChar(5)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="Char(10)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiChoThue_BaiDang", Storage="_BaiDangs", ThisKey="IdNguoiChoThue", OtherKey="IdNguoiChoThue")]
		public EntitySet<BaiDang> BaiDangs
		{
			get
			{
				return this._BaiDangs;
			}
			set
			{
				this._BaiDangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiChoThue_PhongTro", Storage="_PhongTros", ThisKey="IdNguoiChoThue", OtherKey="IdNguoiChoThue")]
		public EntitySet<PhongTro> PhongTros
		{
			get
			{
				return this._PhongTros;
			}
			set
			{
				this._PhongTros.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_NguoiChoThue", Storage="_NguoiDung", ThisKey="IdNguoiDung", OtherKey="IdNguoiDung", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.NguoiChoThues.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.NguoiChoThues.Add(this);
						this._IdNguoiDung = value.IdNguoiDung;
					}
					else
					{
						this._IdNguoiDung = default(long);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaiDangs(BaiDang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiChoThue = this;
		}
		
		private void detach_BaiDangs(BaiDang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiChoThue = null;
		}
		
		private void attach_PhongTros(PhongTro entity)
		{
			this.SendPropertyChanging();
			entity.NguoiChoThue = this;
		}
		
		private void detach_PhongTros(PhongTro entity)
		{
			this.SendPropertyChanging();
			entity.NguoiChoThue = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiDung")]
	public partial class NguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdNguoiDung;
		
		private string _TenTaiKhoan;
		
		private string _MatKhau;
		
		private int _IdVaiTro;
		
		private bool _TonTai;
		
		private EntitySet<KiemDuyetVien> _KiemDuyetViens;
		
		private EntitySet<NguoiChoThue> _NguoiChoThues;
		
		private EntitySet<NguoiThue> _NguoiThues;
		
		private EntitySet<YeuThich> _YeuThiches;
		
		private EntityRef<VaiTro> _VaiTro;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNguoiDungChanging(long value);
    partial void OnIdNguoiDungChanged();
    partial void OnTenTaiKhoanChanging(string value);
    partial void OnTenTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnIdVaiTroChanging(int value);
    partial void OnIdVaiTroChanged();
    partial void OnTonTaiChanging(bool value);
    partial void OnTonTaiChanged();
    #endregion
		
		public NguoiDung()
		{
			this._KiemDuyetViens = new EntitySet<KiemDuyetVien>(new Action<KiemDuyetVien>(this.attach_KiemDuyetViens), new Action<KiemDuyetVien>(this.detach_KiemDuyetViens));
			this._NguoiChoThues = new EntitySet<NguoiChoThue>(new Action<NguoiChoThue>(this.attach_NguoiChoThues), new Action<NguoiChoThue>(this.detach_NguoiChoThues));
			this._NguoiThues = new EntitySet<NguoiThue>(new Action<NguoiThue>(this.attach_NguoiThues), new Action<NguoiThue>(this.detach_NguoiThues));
			this._YeuThiches = new EntitySet<YeuThich>(new Action<YeuThich>(this.attach_YeuThiches), new Action<YeuThich>(this.detach_YeuThiches));
			this._VaiTro = default(EntityRef<VaiTro>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNguoiDung", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdNguoiDung
		{
			get
			{
				return this._IdNguoiDung;
			}
			set
			{
				if ((this._IdNguoiDung != value))
				{
					this.OnIdNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._IdNguoiDung = value;
					this.SendPropertyChanged("IdNguoiDung");
					this.OnIdNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTaiKhoan", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string TenTaiKhoan
		{
			get
			{
				return this._TenTaiKhoan;
			}
			set
			{
				if ((this._TenTaiKhoan != value))
				{
					this.OnTenTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TenTaiKhoan = value;
					this.SendPropertyChanged("TenTaiKhoan");
					this.OnTenTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVaiTro", DbType="Int NOT NULL")]
		public int IdVaiTro
		{
			get
			{
				return this._IdVaiTro;
			}
			set
			{
				if ((this._IdVaiTro != value))
				{
					if (this._VaiTro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdVaiTroChanging(value);
					this.SendPropertyChanging();
					this._IdVaiTro = value;
					this.SendPropertyChanged("IdVaiTro");
					this.OnIdVaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TonTai", DbType="Bit NOT NULL")]
		public bool TonTai
		{
			get
			{
				return this._TonTai;
			}
			set
			{
				if ((this._TonTai != value))
				{
					this.OnTonTaiChanging(value);
					this.SendPropertyChanging();
					this._TonTai = value;
					this.SendPropertyChanged("TonTai");
					this.OnTonTaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_KiemDuyetVien", Storage="_KiemDuyetViens", ThisKey="IdNguoiDung", OtherKey="IdNguoiDung")]
		public EntitySet<KiemDuyetVien> KiemDuyetViens
		{
			get
			{
				return this._KiemDuyetViens;
			}
			set
			{
				this._KiemDuyetViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_NguoiChoThue", Storage="_NguoiChoThues", ThisKey="IdNguoiDung", OtherKey="IdNguoiDung")]
		public EntitySet<NguoiChoThue> NguoiChoThues
		{
			get
			{
				return this._NguoiChoThues;
			}
			set
			{
				this._NguoiChoThues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_NguoiThue", Storage="_NguoiThues", ThisKey="IdNguoiDung", OtherKey="IdNguoiDung")]
		public EntitySet<NguoiThue> NguoiThues
		{
			get
			{
				return this._NguoiThues;
			}
			set
			{
				this._NguoiThues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_YeuThich", Storage="_YeuThiches", ThisKey="IdNguoiDung", OtherKey="IdNguoiDung")]
		public EntitySet<YeuThich> YeuThiches
		{
			get
			{
				return this._YeuThiches;
			}
			set
			{
				this._YeuThiches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VaiTro_NguoiDung", Storage="_VaiTro", ThisKey="IdVaiTro", OtherKey="IdVaiTro", IsForeignKey=true)]
		public VaiTro VaiTro
		{
			get
			{
				return this._VaiTro.Entity;
			}
			set
			{
				VaiTro previousValue = this._VaiTro.Entity;
				if (((previousValue != value) 
							|| (this._VaiTro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VaiTro.Entity = null;
						previousValue.NguoiDungs.Remove(this);
					}
					this._VaiTro.Entity = value;
					if ((value != null))
					{
						value.NguoiDungs.Add(this);
						this._IdVaiTro = value.IdVaiTro;
					}
					else
					{
						this._IdVaiTro = default(int);
					}
					this.SendPropertyChanged("VaiTro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KiemDuyetViens(KiemDuyetVien entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_KiemDuyetViens(KiemDuyetVien entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
		
		private void attach_NguoiChoThues(NguoiChoThue entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_NguoiChoThues(NguoiChoThue entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
		
		private void attach_NguoiThues(NguoiThue entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_NguoiThues(NguoiThue entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
		
		private void attach_YeuThiches(YeuThich entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_YeuThiches(YeuThich entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiThue")]
	public partial class NguoiThue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdNguoiThue;
		
		private long _IdNguoiDung;
		
		private string _TenKhachHang;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _GioiTinh;
		
		private string _DiaChi;
		
		private string _SoDienThoai;
		
		private string _Email;
		
		private EntitySet<PhanHoi> _PhanHois;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNguoiThueChanging(long value);
    partial void OnIdNguoiThueChanged();
    partial void OnIdNguoiDungChanging(long value);
    partial void OnIdNguoiDungChanged();
    partial void OnTenKhachHangChanging(string value);
    partial void OnTenKhachHangChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public NguoiThue()
		{
			this._PhanHois = new EntitySet<PhanHoi>(new Action<PhanHoi>(this.attach_PhanHois), new Action<PhanHoi>(this.detach_PhanHois));
			this._NguoiDung = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNguoiThue", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdNguoiThue
		{
			get
			{
				return this._IdNguoiThue;
			}
			set
			{
				if ((this._IdNguoiThue != value))
				{
					this.OnIdNguoiThueChanging(value);
					this.SendPropertyChanging();
					this._IdNguoiThue = value;
					this.SendPropertyChanged("IdNguoiThue");
					this.OnIdNguoiThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNguoiDung", DbType="BigInt NOT NULL")]
		public long IdNguoiDung
		{
			get
			{
				return this._IdNguoiDung;
			}
			set
			{
				if ((this._IdNguoiDung != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._IdNguoiDung = value;
					this.SendPropertyChanged("IdNguoiDung");
					this.OnIdNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhachHang", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TenKhachHang
		{
			get
			{
				return this._TenKhachHang;
			}
			set
			{
				if ((this._TenKhachHang != value))
				{
					this.OnTenKhachHangChanging(value);
					this.SendPropertyChanging();
					this._TenKhachHang = value;
					this.SendPropertyChanged("TenKhachHang");
					this.OnTenKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NChar(5)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="Char(10)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiThue_PhanHoi", Storage="_PhanHois", ThisKey="IdNguoiThue", OtherKey="IdNguoiThue")]
		public EntitySet<PhanHoi> PhanHois
		{
			get
			{
				return this._PhanHois;
			}
			set
			{
				this._PhanHois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_NguoiThue", Storage="_NguoiDung", ThisKey="IdNguoiDung", OtherKey="IdNguoiDung", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.NguoiThues.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.NguoiThues.Add(this);
						this._IdNguoiDung = value.IdNguoiDung;
					}
					else
					{
						this._IdNguoiDung = default(long);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhanHois(PhanHoi entity)
		{
			this.SendPropertyChanging();
			entity.NguoiThue = this;
		}
		
		private void detach_PhanHois(PhanHoi entity)
		{
			this.SendPropertyChanging();
			entity.NguoiThue = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanHoi")]
	public partial class PhanHoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdPhanHoi;
		
		private long _IdNguoiThue;
		
		private long _IdBaiDang;
		
		private string _NoiDung;
		
		private System.DateTime _NgayPhanHoi;
		
		private EntityRef<BaiDang> _BaiDang;
		
		private EntityRef<NguoiThue> _NguoiThue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPhanHoiChanging(long value);
    partial void OnIdPhanHoiChanged();
    partial void OnIdNguoiThueChanging(long value);
    partial void OnIdNguoiThueChanged();
    partial void OnIdBaiDangChanging(long value);
    partial void OnIdBaiDangChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnNgayPhanHoiChanging(System.DateTime value);
    partial void OnNgayPhanHoiChanged();
    #endregion
		
		public PhanHoi()
		{
			this._BaiDang = default(EntityRef<BaiDang>);
			this._NguoiThue = default(EntityRef<NguoiThue>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPhanHoi", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdPhanHoi
		{
			get
			{
				return this._IdPhanHoi;
			}
			set
			{
				if ((this._IdPhanHoi != value))
				{
					this.OnIdPhanHoiChanging(value);
					this.SendPropertyChanging();
					this._IdPhanHoi = value;
					this.SendPropertyChanged("IdPhanHoi");
					this.OnIdPhanHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNguoiThue", DbType="BigInt NOT NULL")]
		public long IdNguoiThue
		{
			get
			{
				return this._IdNguoiThue;
			}
			set
			{
				if ((this._IdNguoiThue != value))
				{
					if (this._NguoiThue.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNguoiThueChanging(value);
					this.SendPropertyChanging();
					this._IdNguoiThue = value;
					this.SendPropertyChanged("IdNguoiThue");
					this.OnIdNguoiThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBaiDang", DbType="BigInt NOT NULL")]
		public long IdBaiDang
		{
			get
			{
				return this._IdBaiDang;
			}
			set
			{
				if ((this._IdBaiDang != value))
				{
					if (this._BaiDang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBaiDangChanging(value);
					this.SendPropertyChanging();
					this._IdBaiDang = value;
					this.SendPropertyChanged("IdBaiDang");
					this.OnIdBaiDangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayPhanHoi", DbType="Date NOT NULL")]
		public System.DateTime NgayPhanHoi
		{
			get
			{
				return this._NgayPhanHoi;
			}
			set
			{
				if ((this._NgayPhanHoi != value))
				{
					this.OnNgayPhanHoiChanging(value);
					this.SendPropertyChanging();
					this._NgayPhanHoi = value;
					this.SendPropertyChanged("NgayPhanHoi");
					this.OnNgayPhanHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaiDang_PhanHoi", Storage="_BaiDang", ThisKey="IdBaiDang", OtherKey="IdBaiDang", IsForeignKey=true)]
		public BaiDang BaiDang
		{
			get
			{
				return this._BaiDang.Entity;
			}
			set
			{
				BaiDang previousValue = this._BaiDang.Entity;
				if (((previousValue != value) 
							|| (this._BaiDang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BaiDang.Entity = null;
						previousValue.PhanHois.Remove(this);
					}
					this._BaiDang.Entity = value;
					if ((value != null))
					{
						value.PhanHois.Add(this);
						this._IdBaiDang = value.IdBaiDang;
					}
					else
					{
						this._IdBaiDang = default(long);
					}
					this.SendPropertyChanged("BaiDang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiThue_PhanHoi", Storage="_NguoiThue", ThisKey="IdNguoiThue", OtherKey="IdNguoiThue", IsForeignKey=true)]
		public NguoiThue NguoiThue
		{
			get
			{
				return this._NguoiThue.Entity;
			}
			set
			{
				NguoiThue previousValue = this._NguoiThue.Entity;
				if (((previousValue != value) 
							|| (this._NguoiThue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiThue.Entity = null;
						previousValue.PhanHois.Remove(this);
					}
					this._NguoiThue.Entity = value;
					if ((value != null))
					{
						value.PhanHois.Add(this);
						this._IdNguoiThue = value.IdNguoiThue;
					}
					else
					{
						this._IdNguoiThue = default(long);
					}
					this.SendPropertyChanged("NguoiThue");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhongTro")]
	public partial class PhongTro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdPhongTro;
		
		private long _IdNguoiChoThue;
		
		private long _IdDiaChi;
		
		private decimal _DienTich;
		
		private decimal _GiaPhong;
		
		private string _MoTa;
		
		private string _TrangThaiPhong;
		
		private int _IdDanhMuc;
		
		private EntitySet<BaiDang> _BaiDangs;
		
		private EntityRef<DanhMuc> _DanhMuc;
		
		private EntityRef<DiaChi> _DiaChi;
		
		private EntityRef<NguoiChoThue> _NguoiChoThue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPhongTroChanging(long value);
    partial void OnIdPhongTroChanged();
    partial void OnIdNguoiChoThueChanging(long value);
    partial void OnIdNguoiChoThueChanged();
    partial void OnIdDiaChiChanging(long value);
    partial void OnIdDiaChiChanged();
    partial void OnDienTichChanging(decimal value);
    partial void OnDienTichChanged();
    partial void OnGiaPhongChanging(decimal value);
    partial void OnGiaPhongChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnTrangThaiPhongChanging(string value);
    partial void OnTrangThaiPhongChanged();
    partial void OnIdDanhMucChanging(int value);
    partial void OnIdDanhMucChanged();
    #endregion
		
		public PhongTro()
		{
			this._BaiDangs = new EntitySet<BaiDang>(new Action<BaiDang>(this.attach_BaiDangs), new Action<BaiDang>(this.detach_BaiDangs));
			this._DanhMuc = default(EntityRef<DanhMuc>);
			this._DiaChi = default(EntityRef<DiaChi>);
			this._NguoiChoThue = default(EntityRef<NguoiChoThue>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPhongTro", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdPhongTro
		{
			get
			{
				return this._IdPhongTro;
			}
			set
			{
				if ((this._IdPhongTro != value))
				{
					this.OnIdPhongTroChanging(value);
					this.SendPropertyChanging();
					this._IdPhongTro = value;
					this.SendPropertyChanged("IdPhongTro");
					this.OnIdPhongTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNguoiChoThue", DbType="BigInt NOT NULL")]
		public long IdNguoiChoThue
		{
			get
			{
				return this._IdNguoiChoThue;
			}
			set
			{
				if ((this._IdNguoiChoThue != value))
				{
					if (this._NguoiChoThue.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNguoiChoThueChanging(value);
					this.SendPropertyChanging();
					this._IdNguoiChoThue = value;
					this.SendPropertyChanged("IdNguoiChoThue");
					this.OnIdNguoiChoThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDiaChi", DbType="BigInt NOT NULL")]
		public long IdDiaChi
		{
			get
			{
				return this._IdDiaChi;
			}
			set
			{
				if ((this._IdDiaChi != value))
				{
					if (this._DiaChi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDiaChiChanging(value);
					this.SendPropertyChanging();
					this._IdDiaChi = value;
					this.SendPropertyChanged("IdDiaChi");
					this.OnIdDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienTich", DbType="Decimal(5,2) NOT NULL")]
		public decimal DienTich
		{
			get
			{
				return this._DienTich;
			}
			set
			{
				if ((this._DienTich != value))
				{
					this.OnDienTichChanging(value);
					this.SendPropertyChanging();
					this._DienTich = value;
					this.SendPropertyChanged("DienTich");
					this.OnDienTichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaPhong", DbType="Decimal(10,2) NOT NULL")]
		public decimal GiaPhong
		{
			get
			{
				return this._GiaPhong;
			}
			set
			{
				if ((this._GiaPhong != value))
				{
					this.OnGiaPhongChanging(value);
					this.SendPropertyChanging();
					this._GiaPhong = value;
					this.SendPropertyChanged("GiaPhong");
					this.OnGiaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(1000)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiPhong", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrangThaiPhong
		{
			get
			{
				return this._TrangThaiPhong;
			}
			set
			{
				if ((this._TrangThaiPhong != value))
				{
					this.OnTrangThaiPhongChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiPhong = value;
					this.SendPropertyChanged("TrangThaiPhong");
					this.OnTrangThaiPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDanhMuc", DbType="Int NOT NULL")]
		public int IdDanhMuc
		{
			get
			{
				return this._IdDanhMuc;
			}
			set
			{
				if ((this._IdDanhMuc != value))
				{
					if (this._DanhMuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDanhMucChanging(value);
					this.SendPropertyChanging();
					this._IdDanhMuc = value;
					this.SendPropertyChanged("IdDanhMuc");
					this.OnIdDanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongTro_BaiDang", Storage="_BaiDangs", ThisKey="IdPhongTro", OtherKey="IdPhongTro")]
		public EntitySet<BaiDang> BaiDangs
		{
			get
			{
				return this._BaiDangs;
			}
			set
			{
				this._BaiDangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_PhongTro", Storage="_DanhMuc", ThisKey="IdDanhMuc", OtherKey="IdDanhMuc", IsForeignKey=true)]
		public DanhMuc DanhMuc
		{
			get
			{
				return this._DanhMuc.Entity;
			}
			set
			{
				DanhMuc previousValue = this._DanhMuc.Entity;
				if (((previousValue != value) 
							|| (this._DanhMuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMuc.Entity = null;
						previousValue.PhongTros.Remove(this);
					}
					this._DanhMuc.Entity = value;
					if ((value != null))
					{
						value.PhongTros.Add(this);
						this._IdDanhMuc = value.IdDanhMuc;
					}
					else
					{
						this._IdDanhMuc = default(int);
					}
					this.SendPropertyChanged("DanhMuc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiaChi_PhongTro", Storage="_DiaChi", ThisKey="IdDiaChi", OtherKey="IdDiaChi", IsForeignKey=true)]
		public DiaChi DiaChi
		{
			get
			{
				return this._DiaChi.Entity;
			}
			set
			{
				DiaChi previousValue = this._DiaChi.Entity;
				if (((previousValue != value) 
							|| (this._DiaChi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DiaChi.Entity = null;
						previousValue.PhongTros.Remove(this);
					}
					this._DiaChi.Entity = value;
					if ((value != null))
					{
						value.PhongTros.Add(this);
						this._IdDiaChi = value.IdDiaChi;
					}
					else
					{
						this._IdDiaChi = default(long);
					}
					this.SendPropertyChanged("DiaChi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiChoThue_PhongTro", Storage="_NguoiChoThue", ThisKey="IdNguoiChoThue", OtherKey="IdNguoiChoThue", IsForeignKey=true)]
		public NguoiChoThue NguoiChoThue
		{
			get
			{
				return this._NguoiChoThue.Entity;
			}
			set
			{
				NguoiChoThue previousValue = this._NguoiChoThue.Entity;
				if (((previousValue != value) 
							|| (this._NguoiChoThue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiChoThue.Entity = null;
						previousValue.PhongTros.Remove(this);
					}
					this._NguoiChoThue.Entity = value;
					if ((value != null))
					{
						value.PhongTros.Add(this);
						this._IdNguoiChoThue = value.IdNguoiChoThue;
					}
					else
					{
						this._IdNguoiChoThue = default(long);
					}
					this.SendPropertyChanged("NguoiChoThue");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaiDangs(BaiDang entity)
		{
			this.SendPropertyChanging();
			entity.PhongTro = this;
		}
		
		private void detach_BaiDangs(BaiDang entity)
		{
			this.SendPropertyChanging();
			entity.PhongTro = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VaiTro")]
	public partial class VaiTro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdVaiTro;
		
		private string _TenVaiTro;
		
		private EntitySet<NguoiDung> _NguoiDungs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdVaiTroChanging(int value);
    partial void OnIdVaiTroChanged();
    partial void OnTenVaiTroChanging(string value);
    partial void OnTenVaiTroChanged();
    #endregion
		
		public VaiTro()
		{
			this._NguoiDungs = new EntitySet<NguoiDung>(new Action<NguoiDung>(this.attach_NguoiDungs), new Action<NguoiDung>(this.detach_NguoiDungs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVaiTro", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdVaiTro
		{
			get
			{
				return this._IdVaiTro;
			}
			set
			{
				if ((this._IdVaiTro != value))
				{
					this.OnIdVaiTroChanging(value);
					this.SendPropertyChanging();
					this._IdVaiTro = value;
					this.SendPropertyChanged("IdVaiTro");
					this.OnIdVaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenVaiTro", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TenVaiTro
		{
			get
			{
				return this._TenVaiTro;
			}
			set
			{
				if ((this._TenVaiTro != value))
				{
					this.OnTenVaiTroChanging(value);
					this.SendPropertyChanging();
					this._TenVaiTro = value;
					this.SendPropertyChanged("TenVaiTro");
					this.OnTenVaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VaiTro_NguoiDung", Storage="_NguoiDungs", ThisKey="IdVaiTro", OtherKey="IdVaiTro")]
		public EntitySet<NguoiDung> NguoiDungs
		{
			get
			{
				return this._NguoiDungs;
			}
			set
			{
				this._NguoiDungs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.VaiTro = this;
		}
		
		private void detach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.VaiTro = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.YeuThich")]
	public partial class YeuThich : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDYT;
		
		private long _IdBaiDang;
		
		private long _IdNguoiDung;
		
		private EntityRef<BaiDang> _BaiDang;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDYTChanging(int value);
    partial void OnIDYTChanged();
    partial void OnIdBaiDangChanging(long value);
    partial void OnIdBaiDangChanged();
    partial void OnIdNguoiDungChanging(long value);
    partial void OnIdNguoiDungChanged();
    #endregion
		
		public YeuThich()
		{
			this._BaiDang = default(EntityRef<BaiDang>);
			this._NguoiDung = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDYT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDYT
		{
			get
			{
				return this._IDYT;
			}
			set
			{
				if ((this._IDYT != value))
				{
					this.OnIDYTChanging(value);
					this.SendPropertyChanging();
					this._IDYT = value;
					this.SendPropertyChanged("IDYT");
					this.OnIDYTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBaiDang", DbType="BigInt NOT NULL")]
		public long IdBaiDang
		{
			get
			{
				return this._IdBaiDang;
			}
			set
			{
				if ((this._IdBaiDang != value))
				{
					if (this._BaiDang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBaiDangChanging(value);
					this.SendPropertyChanging();
					this._IdBaiDang = value;
					this.SendPropertyChanged("IdBaiDang");
					this.OnIdBaiDangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNguoiDung", DbType="BigInt NOT NULL")]
		public long IdNguoiDung
		{
			get
			{
				return this._IdNguoiDung;
			}
			set
			{
				if ((this._IdNguoiDung != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._IdNguoiDung = value;
					this.SendPropertyChanged("IdNguoiDung");
					this.OnIdNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaiDang_YeuThich", Storage="_BaiDang", ThisKey="IdBaiDang", OtherKey="IdBaiDang", IsForeignKey=true)]
		public BaiDang BaiDang
		{
			get
			{
				return this._BaiDang.Entity;
			}
			set
			{
				BaiDang previousValue = this._BaiDang.Entity;
				if (((previousValue != value) 
							|| (this._BaiDang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BaiDang.Entity = null;
						previousValue.YeuThiches.Remove(this);
					}
					this._BaiDang.Entity = value;
					if ((value != null))
					{
						value.YeuThiches.Add(this);
						this._IdBaiDang = value.IdBaiDang;
					}
					else
					{
						this._IdBaiDang = default(long);
					}
					this.SendPropertyChanged("BaiDang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_YeuThich", Storage="_NguoiDung", ThisKey="IdNguoiDung", OtherKey="IdNguoiDung", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.YeuThiches.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.YeuThiches.Add(this);
						this._IdNguoiDung = value.IdNguoiDung;
					}
					else
					{
						this._IdNguoiDung = default(long);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
